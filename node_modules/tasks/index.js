(function(){
  'use strict';

  var tasks = require('express').Router();
  var pg = require('pg');

  tasks
    // GET all tasks
    .get('/', function(request, response){
      pg.connect(function(err, client){
        if (err) {
          console.error('GET all tasks:\n', err);
          response.status(500).end();
        } else {
          client.query({
            text: 'SELECT id, task_name FROM e_tasks ORDER BY id'
          }, function(err, result){
            if (err) {
              console.error('SELECT all tasks:\n', err);
              response.status(500).end();
            } else {
              var retval = [];
              for(var i = 0, len = result.rows.length; i < len; i++){
                retval.push({
                  id:           result.rows[i].id,
                  taskName:     result.rows[i].task_name
                })
              }
							client.end();
              response.status(200).json(retval).end();
            }
          })
        }
      })
    })
    // POST new task
    .post('/', function(request, response){
			// Проверяем на наличие данных для добавления в БД
			// Если данных нет, отправляем статус 400 (ошибка клиента)
      if (!request.body.taskName) {
        console.error(request.body);
        response.status(400).end();
      } else {
				// Если данные есть, соединяемся с БД
        pg.connect(function(err, client){
					// Если ошибка соединения с базой, то отправляем статус 500 (ошибка сервера):
          if (err) {
            console.error('POST new task:\n', err);
						response.status(500).end();
          } else {
						// Если ошибки соединения с БД нет, создаем объект и записываем в него данные:
            var task = {
              taskName: request.body.taskName
            }
						// Проверяем есть ли в БД задача с таким наименованием:
            client.query({
              text: 'SELECT id FROM test WHERE task_name = $1',
              values: [task.taskName]
            }, function (err, result){
							if (err) {
								// Если ошибка выполнения запроса в БД, то отправляем статус 500 (ошибка сервера):
								console.error('SELECT task_name', err);
								response.status(500).end();
							} else {
								// Если ошибки выполнения запроса нет, проверяем результаты запроса:
								// Если количество возвращенных строк равно 1, значит запись с таким наименованием задачи есть, отправляем статус 400 (ошибка клиента)
	              if (Number(result['rowCount'] === 1)) {
	                response.status(400).end();
	              } else {
									// Если количество возвращенных строк равно 0, значит записи с таким наименованием задачи нет:
									if (Number(result['rowCount'] === 0)) {
										// Выполняем вставку записи в БД:
		                client.query({
		                  text: 'INSERT INTO test(task_name) VALUES ($1) RETURNING id',
		                  values: [task.taskName]
		                }, function(err, result){
		                  if (err) {
		                    if (Number(err.code) === 23505) {
		                      response.status(400).end();
		                    } else if (err) {
		                      console.error('INSERT new task:\n', err);
		                      response.status(500).end();
		                    } else {
													client.end();
		                      response.json(result.rows[0]);
		                    }
		                  }
		                })	
									}
	              }
							}
            })
          }
        })
      }
    });

  module.exports = tasks;
})();
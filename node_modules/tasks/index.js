(function(){
  'use strict';

  var tasks = require('express').Router();
  var pg = require('pg');

  tasks
    .get('/', function(request, response){
      pg.connect(function(err, client){
        if (err) {
          console.error('GET all tasks:\n', err);
          response.status(500).end();
        } else {
          client.query({
            text: 'SELECT id, task_name FROM e_tasks ORDER BY id'
          }, function(err, result){
            if (err) {
              console.log('SELECT all tasks:\n', err);
              response.status(500).end();
            } else {
              var retval = [];
              for(var i = 0, len = result.rows.length; i < len; i++){
                retval.push({
                  id: result.rows[i].id,
                  taskName: result.rows[i].task_name
                })
              }
              response.status(200).json(retval).end();
            }
          })
        }
      })
    })
    .post('/', function(request, response){
      if (!request.body.taskName) {
        console.error(request.body);
        response.status(400).end('Error');
      } else {
        pg.connect(function(err, client){
          if (err) {
            console.error('POST new task:\n', err);
          } else {
            var task = {
              taskName: request.body.taskName
            }
            client.query({
              text: 'SELECT id FROM test WHERE task_name = $1',
              values: [task.taskName]
            }, function (err, result){
              if (Number(result['rowCount'] === 1)){
                response.status(400).end('Duplicate');
              } else {
                client.query({
                  text: 'INSERT INTO test(task_name) VALUES ($1) RETURNING id',
                  values: [task.taskName]
                }, function(err, result){
                  if (err) {
                    if (Number(err.code) === 23505) {
                      response.status(400).end('Duplicate');
                    } else if (err) {
                      console.error('INSERT new task:\n', err);
                      response.status(500).end('Error');
                    } else {
                      response.json(result.rows[0]);
                    }
                  }
                })
              }
            })
          }
        })
      }
    });

  module.exports = tasks;
})();